// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.20.1
// source: proto/paging.proto

package paging

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PageSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Page:
	//	*PageSpec_First
	//	*PageSpec_Prev
	//	*PageSpec_Next
	//	*PageSpec_Cur
	Page isPageSpec_Page `protobuf_oneof:"page"`
}

func (x *PageSpec) Reset() {
	*x = PageSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_paging_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageSpec) ProtoMessage() {}

func (x *PageSpec) ProtoReflect() protoreflect.Message {
	mi := &file_proto_paging_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageSpec.ProtoReflect.Descriptor instead.
func (*PageSpec) Descriptor() ([]byte, []int) {
	return file_proto_paging_proto_rawDescGZIP(), []int{0}
}

func (m *PageSpec) GetPage() isPageSpec_Page {
	if m != nil {
		return m.Page
	}
	return nil
}

func (x *PageSpec) GetFirst() *Paging_First {
	if x, ok := x.GetPage().(*PageSpec_First); ok {
		return x.First
	}
	return nil
}

func (x *PageSpec) GetPrev() *Paging_Previous {
	if x, ok := x.GetPage().(*PageSpec_Prev); ok {
		return x.Prev
	}
	return nil
}

func (x *PageSpec) GetNext() *Paging_Next {
	if x, ok := x.GetPage().(*PageSpec_Next); ok {
		return x.Next
	}
	return nil
}

func (x *PageSpec) GetCur() *Paging_Current {
	if x, ok := x.GetPage().(*PageSpec_Cur); ok {
		return x.Cur
	}
	return nil
}

type isPageSpec_Page interface {
	isPageSpec_Page()
}

type PageSpec_First struct {
	First *Paging_First `protobuf:"bytes,1,opt,name=first,proto3,oneof"`
}

type PageSpec_Prev struct {
	Prev *Paging_Previous `protobuf:"bytes,2,opt,name=prev,proto3,oneof"`
}

type PageSpec_Next struct {
	Next *Paging_Next `protobuf:"bytes,3,opt,name=next,proto3,oneof"`
}

type PageSpec_Cur struct {
	Cur *Paging_Current `protobuf:"bytes,4,opt,name=cur,proto3,oneof"`
}

func (*PageSpec_First) isPageSpec_Page() {}

func (*PageSpec_Prev) isPageSpec_Page() {}

func (*PageSpec_Next) isPageSpec_Page() {}

func (*PageSpec_Cur) isPageSpec_Page() {}

type Paging struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prev *Paging_Previous `protobuf:"bytes,1,opt,name=prev,proto3" json:"prev,omitempty"`
	Cur  *Paging_Current  `protobuf:"bytes,2,opt,name=cur,proto3" json:"cur,omitempty"`
	Next *Paging_Next     `protobuf:"bytes,3,opt,name=next,proto3" json:"next,omitempty"`
}

func (x *Paging) Reset() {
	*x = Paging{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_paging_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Paging) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Paging) ProtoMessage() {}

func (x *Paging) ProtoReflect() protoreflect.Message {
	mi := &file_proto_paging_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Paging.ProtoReflect.Descriptor instead.
func (*Paging) Descriptor() ([]byte, []int) {
	return file_proto_paging_proto_rawDescGZIP(), []int{1}
}

func (x *Paging) GetPrev() *Paging_Previous {
	if x != nil {
		return x.Prev
	}
	return nil
}

func (x *Paging) GetCur() *Paging_Current {
	if x != nil {
		return x.Cur
	}
	return nil
}

func (x *Paging) GetNext() *Paging_Next {
	if x != nil {
		return x.Next
	}
	return nil
}

// First describes the first page of a collection of items.
//
// It's no more than a wrapped page size.
type Paging_First struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize int32 `protobuf:"varint,1,opt,name=pageSize,proto3" json:"pageSize,omitempty"` // The size (number of items) of the first page.
}

func (x *Paging_First) Reset() {
	*x = Paging_First{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_paging_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Paging_First) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Paging_First) ProtoMessage() {}

func (x *Paging_First) ProtoReflect() protoreflect.Message {
	mi := &file_proto_paging_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Paging_First.ProtoReflect.Descriptor instead.
func (*Paging_First) Descriptor() ([]byte, []int) {
	return file_proto_paging_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Paging_First) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// A Previous describes the previous page of the current one.
//
// It does not explicitely identify the first item to be stable upon inserts.
type Paging_Previous struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	End string `protobuf:"bytes,1,opt,name=end,proto3" json:"end,omitempty"` // End of the previous page idenfied by the first item's ID on the
	// successing page (usually equals to the current page).
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"` // The size (number of items) of a previous page.
}

func (x *Paging_Previous) Reset() {
	*x = Paging_Previous{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_paging_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Paging_Previous) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Paging_Previous) ProtoMessage() {}

func (x *Paging_Previous) ProtoReflect() protoreflect.Message {
	mi := &file_proto_paging_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Paging_Previous.ProtoReflect.Descriptor instead.
func (*Paging_Previous) Descriptor() ([]byte, []int) {
	return file_proto_paging_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Paging_Previous) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *Paging_Previous) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// A Next describes the next page of the current one.
//
// It does not explicitely identify the last item to be stable upon inserts.
type Paging_Next struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start string `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"` // Start of the next page idenfied by the last item's ID on the
	// preceding page (usually equals to the current page).
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"` // The size (number of items) of a next page.
}

func (x *Paging_Next) Reset() {
	*x = Paging_Next{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_paging_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Paging_Next) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Paging_Next) ProtoMessage() {}

func (x *Paging_Next) ProtoReflect() protoreflect.Message {
	mi := &file_proto_paging_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Paging_Next.ProtoReflect.Descriptor instead.
func (*Paging_Next) Descriptor() ([]byte, []int) {
	return file_proto_paging_proto_rawDescGZIP(), []int{1, 2}
}

func (x *Paging_Next) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *Paging_Next) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type Paging_Current struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start    string `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`        // Start of the a page idenfied by the first item's ID.
	End      string `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`            // End of the a page idenfied by the last item's ID.
	PageSize int32  `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"` // The size (number of items) of a page.
}

func (x *Paging_Current) Reset() {
	*x = Paging_Current{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_paging_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Paging_Current) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Paging_Current) ProtoMessage() {}

func (x *Paging_Current) ProtoReflect() protoreflect.Message {
	mi := &file_proto_paging_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Paging_Current.ProtoReflect.Descriptor instead.
func (*Paging_Current) Descriptor() ([]byte, []int) {
	return file_proto_paging_proto_rawDescGZIP(), []int{1, 3}
}

func (x *Paging_Current) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *Paging_Current) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *Paging_Current) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

var File_proto_paging_proto protoreflect.FileDescriptor

var file_proto_paging_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa, 0x01, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x25, 0x0a, 0x05, 0x66, 0x69, 0x72, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x69, 0x72, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x05, 0x66, 0x69, 0x72, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x70, 0x72, 0x65, 0x76,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x48, 0x00, 0x52, 0x04, 0x70, 0x72, 0x65, 0x76,
	0x12, 0x22, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x00, 0x52, 0x04,
	0x6e, 0x65, 0x78, 0x74, 0x12, 0x23, 0x0a, 0x03, 0x63, 0x75, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x03, 0x63, 0x75, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x22, 0xdb, 0x02, 0x0a, 0x06, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x04,
	0x70, 0x72, 0x65, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x52, 0x04, 0x70, 0x72,
	0x65, 0x76, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x75, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x52, 0x03, 0x63, 0x75, 0x72, 0x12, 0x20, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x65, 0x78,
	0x74, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x1a, 0x23, 0x0a, 0x05, 0x46, 0x69, 0x72, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x1a, 0x38, 0x0a, 0x08,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x1a, 0x38, 0x0a, 0x04, 0x4e, 0x65, 0x78, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x1a, 0x4d, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x65, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x42,
	0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6d,
	0x61, 0x72, 0x74, 0x6e, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x73, 0x61, 0x61, 0x73, 0x2d, 0x6b,
	0x69, 0x74, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6c, 0x69, 0x62, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_paging_proto_rawDescOnce sync.Once
	file_proto_paging_proto_rawDescData = file_proto_paging_proto_rawDesc
)

func file_proto_paging_proto_rawDescGZIP() []byte {
	file_proto_paging_proto_rawDescOnce.Do(func() {
		file_proto_paging_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_paging_proto_rawDescData)
	})
	return file_proto_paging_proto_rawDescData
}

var file_proto_paging_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_paging_proto_goTypes = []interface{}{
	(*PageSpec)(nil),        // 0: PageSpec
	(*Paging)(nil),          // 1: Paging
	(*Paging_First)(nil),    // 2: Paging.First
	(*Paging_Previous)(nil), // 3: Paging.Previous
	(*Paging_Next)(nil),     // 4: Paging.Next
	(*Paging_Current)(nil),  // 5: Paging.Current
}
var file_proto_paging_proto_depIdxs = []int32{
	2, // 0: PageSpec.first:type_name -> Paging.First
	3, // 1: PageSpec.prev:type_name -> Paging.Previous
	4, // 2: PageSpec.next:type_name -> Paging.Next
	5, // 3: PageSpec.cur:type_name -> Paging.Current
	3, // 4: Paging.prev:type_name -> Paging.Previous
	5, // 5: Paging.cur:type_name -> Paging.Current
	4, // 6: Paging.next:type_name -> Paging.Next
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_proto_paging_proto_init() }
func file_proto_paging_proto_init() {
	if File_proto_paging_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_paging_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_paging_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Paging); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_paging_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Paging_First); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_paging_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Paging_Previous); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_paging_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Paging_Next); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_paging_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Paging_Current); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_paging_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*PageSpec_First)(nil),
		(*PageSpec_Prev)(nil),
		(*PageSpec_Next)(nil),
		(*PageSpec_Cur)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_paging_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_paging_proto_goTypes,
		DependencyIndexes: file_proto_paging_proto_depIdxs,
		MessageInfos:      file_proto_paging_proto_msgTypes,
	}.Build()
	File_proto_paging_proto = out.File
	file_proto_paging_proto_rawDesc = nil
	file_proto_paging_proto_goTypes = nil
	file_proto_paging_proto_depIdxs = nil
}
