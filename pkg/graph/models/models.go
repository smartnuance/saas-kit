// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package models

import (
	"time"
)

type Event struct {
	ID        string     `json:"id"`
	Instance  *Instance  `json:"instance"`
	EventInfo *EventInfo `json:"eventInfo"`
	Starts    time.Time  `json:"starts"`
	Ends      *time.Time `json:"ends"`
}

type EventInfo struct {
	Title        string `json:"title"`
	Slug         string `json:"slug"`
	LocationName string `json:"locationName"`
	LocationURL  string `json:"locationURL"`
}

// FirstSpec describes the first page of a collection of items.
//
// It's no more than a wrapped page size.
type FirstSpec struct {
	// The size (number of items) of the first page.
	PageSize int `json:"pageSize"`
}

type FullSpec struct {
	// Start of the a page idenfied by the first item's ID.
	Start string `json:"start"`
	// End of the a page idenfied by the last item's ID.
	End string `json:"end"`
	// The size (number of items) of a page.
	PageSize int `json:"pageSize"`
}

type Instance struct {
	ID   string `json:"id"`
	Name string `json:"name"`
	URL  string `json:"URL"`
}

// A NextSpec describes the next page of the current one.
//
// It does not explicitely identify the last item to be stable upon inserts.
type NextSpec struct {
	// Start of the next page idenfied by the last item's ID on the preceding page (usually equals to the current page).
	Start string `json:"start"`
	// The size (number of items) of a next page.
	PageSize int `json:"pageSize"`
}

type Paging struct {
	Prev *PreviousSpec `json:"prev"`
	Cur  *FullSpec     `json:"cur"`
	Next *NextSpec     `json:"next"`
}

// A PreviousSpec describes the previous page of the current one.
//
// It does not explicitely identify the first item to be stable upon inserts.
type PreviousSpec struct {
	// End of the previous page idenfied by the first item's ID on the successing page (usually equals to the current page).
	End string `json:"end"`
	// The size (number of items) of a previous page.
	PageSize int `json:"pageSize"`
}

type Workshop struct {
	ID           string        `json:"id"`
	Instance     string        `json:"instance"`
	WorkshopInfo *WorkshopInfo `json:"workshopInfo"`
	Starts       time.Time     `json:"starts"`
	Ends         *time.Time    `json:"ends"`
	Event        *Event        `json:"event"`
}

type WorkshopInfo struct {
	Title        string `json:"title"`
	Slug         string `json:"slug"`
	LocationName string `json:"locationName"`
	LocationURL  string `json:"locationURL"`
	Couples      bool   `json:"couples"`
}

type WorkshopInfoInput struct {
	Title        string `json:"title"`
	Slug         string `json:"slug"`
	LocationName string `json:"locationName"`
	LocationURL  string `json:"locationURL"`
	Couples      bool   `json:"couples"`
}

type WorkshopInput struct {
	ID           string             `json:"id"`
	Instance     string             `json:"instance"`
	WorkshopInfo *WorkshopInfoInput `json:"workshopInfo"`
	Starts       time.Time          `json:"starts"`
	Ends         *time.Time         `json:"ends"`
	EventID      string             `json:"eventID"`
}

type WorkshopList struct {
	Items  []Workshop `json:"items"`
	Paging *Paging    `json:"paging"`
}
